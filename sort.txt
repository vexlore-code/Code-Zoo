---

## 🔄 **Sorting Algorithms**

### 1. **Insertion Sort (C++)**

```cpp
void insertionSort(int arr[], int n) {
    for (int i = 1; i < n; i++) {
        int key = arr[i], j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j]; j--;
        }
        arr[j + 1] = key;
    }
}
```

---

### 2. **Bubble Sort (C++)**

```cpp
void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n-1; i++)
        for (int j = 0; j < n-i-1; j++)
            if (arr[j] > arr[j+1])
                std::swap(arr[j], arr[j+1]);
}
```

---

### 3. **Selection Sort (C++)**

```cpp
void selectionSort(int arr[], int n) {
    for (int i = 0; i < n-1; i++) {
        int minIndex = i;
        for (int j = i+1; j < n; j++)
            if (arr[j] < arr[minIndex])
                minIndex = j;
        std::swap(arr[i], arr[minIndex]);
    }
}
```

---

## 🔍 **Searching Algorithms**

### 4. **Binary Search (C++)**

```cpp
int binarySearch(int arr[], int n, int target) {
    int left = 0, right = n-1;
    while (left <= right) {
        int mid = left + (right - left)/2;
        if (arr[mid] == target) return mid;
        else if (arr[mid] < target) left = mid + 1;
        else right = mid - 1;
    }
    return -1; // Not found
}
```

---

### 5. **Linear Search (C++)**

```cpp
int linearSearch(int arr[], int n, int target) {
    for (int i = 0; i < n; i++)
        if (arr[i] == target) return i;
    return -1; // Not found
}
```

---

## 🧱 **Data Structures**

### 6. **Stack (C++ using STL)**

```cpp
#include <stack>
#include <iostream>

void stackExample() {
    std::stack<int> s;
    s.push(10);
    s.push(20);
    std::cout << "Top: " << s.top() << "\n"; // 20
    s.pop();
    std::cout << "Top after pop: " << s.top() << "\n"; // 10
}
```

---

### 7. **Queue (C++ using STL)**

```cpp
#include <queue>
#include <iostream>

void queueExample() {
    std::queue<int> q;
    q.push(10);
    q.push(20);
    std::cout << "Front: " << q.front() << "\n"; // 10
    q.pop();
    std::cout << "Front after pop: " << q.front() << "\n"; // 20
}
```

---

### 8. **Vector (C++ using STL)**

```cpp
#include <vector>
#include <iostream>

void vectorExample() {
    std::vector<int> v = {1, 2, 3};
    v.push_back(4);
    for (int i : v)
        std::cout << i << " ";
    // Output: 1 2 3 4
}
```
